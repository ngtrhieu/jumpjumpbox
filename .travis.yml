language: shell
os: linux
dist: xenial
branches:
  only:
    - master
    - staging
services:
  - docker
cache:
  bundler: true
  yarn: true
  # directories:
  #   - $HOME/docker

before_install:
  # Save tagged docker images
  # - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
  # Update apt
  - sudo apt-get update
  - sudo apt-get install curl unzip -y
install:
  # Install aws-cli
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - sudo ./aws/install
  # Setup aws-credentials based on ARTIFACTS_KEY and ARTIFACTS_SECRET
  - chmod +x ./scripts/utils/aws_credentials.sh
  - ./scripts/utils/aws_credentials.sh
before_script:
  # Decrypt secrets inside ./secrets folder
  - openssl aes-256-cbc -K $encrypted_dbcbaea3fa1e_key -iv $encrypted_dbcbaea3fa1e_iv -in ./secrets/keystore.keystore.enc -out ./secrets/keystore.keystore -d
  - openssl aes-256-cbc -K $encrypted_8026183efba4_key -iv $encrypted_8026183efba4_iv -in ./secrets/Unity_lic.ulf.enc -out ./secrets/Unity_lic.ulf -d
  - openssl aes-256-cbc -K $encrypted_0c8377fdb45e_key -iv $encrypted_0c8377fdb45e_iv -in ./secrets/firebase.token.enc -out ./secrets/firebase.token -d
before_cache:
  - mkdir -p $HOME/docker
  # - docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}' | xargs -n 2 -t bash -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
jobs:
  include:
    - stage: test
      name: Edit Mode Test
      env: TEST_PLATFORM=editmode IMAGE_NAME=ngtrhieu/unity3d
      script:
        - chmod +x ./scripts/docker_test.sh
        - docker pull ngtrhieu/unity3d
        # - ./scripts/docker_test.sh
      after_script:
        - aws s3 cp ./test_results s3://${BUILD_BUCKET}/report_${BUILD_TARGET}_${TRAVIS_BUILD_NUMBER} --recursive
    - stage: build
      name: Build Android
      env: BUILD_TARGET=Android IMAGE_NAME=ngtrhieu/unity3d-android
      script:
        - chmod +x ./scripts/docker_build.sh
        - docker pull ngtrhieu/unity3d-android
        - ./scripts/docker_build.sh
      after_success:
        - aws s3 cp ./builds s3://${BUILD_BUCKET}/${BUILD_TARGET}_${TRAVIS_BUILD_NUMBER} --recursive
        - aws s3 cp ./unity/ServerData s3://${CONTENT_BUCKET} --recursive
    - stage: deploy
      if: branch = master
      name: Deploy Android
      env: BUILD_TARGET=Android IMAGE_NAME=ngtrhieu/unity3d-android
      script:
        - mkdir -p ./builds
        - aws s3 cp s3://${BUILD_BUCKET}/${BUILD_TARGET}_${TRAVIS_BUILD_NUMBER} ./builds --recursive
        - chmod +x ./scripts/docker_distribute.sh && ./scripts/docker_distribute.sh
